)
]
## drop rows with any missingness.
# nrow(d)                                 # how many observations? 11601
d <- na.omit(d)                           # drop row with ANY missing
# nrow(d)                                 # now, how many observations? 5708
# cleaned up.
d[ , test_score := read_score + math_score + list_score]
# create a function that will evaluate the students' percentiles
pct_fun <- ecdf(d$test_score)
d[ , percentile := pct_fun(test_score) ]
# you'll see that for category and numeric variables we are doing
# slightly different things. tables for categories, and means for
# numeric.
#
# d[ , table(free_lunch, treatment)]
# d[ , table(race_wa, treatment)]
# d[ , mean(age_1985), by = treatment]
# d[ , mean(class_size), by = treatment]
# d[ , mean(percentile), by = treatment]
# we could make this slightly more consistent if we do the following:
summary_table <- d[ , .(
free_lunch  = mean(free_lunch == "FREE LUNCH"),
white_asian = mean(race_wa),
age_1985    = mean(age_1985),
class_size  = mean(class_size),
percentile  = mean(percentile)
),
by = treatment
]
stargazer(summary_table, summary = FALSE, header = FALSE,
title = "Summary Table of Key Covariates",
digits = 2)
type = 'text)
stargazer(summary_table, summary = FALSE, header = FALSE,
title = "Summary Table of Key Covariates",
digits = 2,
type = 'text)
stargazer(summary_table, summary = FALSE, header = FALSE,
title = "Summary Table of Key Covariates",
digits = 2,
type = 'text')
diff_mean <- d[ , .(group_mean   = mean(percentile),
group_var     = var(percentile),
observations = .N
)
, by = .(treatment)]
diff_mean
diff_mean[ , difference := group_mean - group_mean[3]]
diff_mean[ , diff_se    := sqrt((group_var/observations) + (group_var[3]/observations[3]))]
diff_mean[ , t          := difference / diff_se]
diff_mean[ , p_val      := 2*(1-pnorm(abs(t)))]
diff_mean[ , .(treatment, difference, diff_se, t, p_val)]
?lm
m1 <- lm(percentile ~ treatment, data = d)
m2 <- lm(percentile ~ treatment + school_id, data = d)
m3 <- lm(percentile ~ treatment + race_wa + gender + free_lunch + school_id,
data = d)
stargazer(m1, m2,
type = "text", omit = "school_id",
apply.coef = function(x) x * 100,
apply.se = function(x) x * 100,
add.lines = list(c("School Fixed Effects", "No", "Yes")))
# here's what is happening:
# 1. we are using the `vcovHC` function from the library `sandwich`
#    to estimate the white heteroskedastic-consistent standard errors
m1.vcovHC <- vcovHC(m1)  # from library(sandwich)
m2.vcovHC <- vcovHC(m2)
m3.vcovHC <- vcovHC(m3)
# 2. with these, we can use the `coeftest` function from the `lmtest`
#    package to perform hypothesis tests.
#    these are the `robust` standard errors.
# wald test is: coef / se
# library(lmtest)
?coeftest
r1 <- coeftest(m1, vcov = vcovHC(m1, type = "const"))
r2 <- coeftest(m1, vcov = vcovHC(m1, type = "HC3"))
stargazer(r1, r2, type = "text")
coeftest(m1, vcov = m1.vcovHC)
coef(m1) / sqrt(diag(m1.vcovHC))
coeftest(m1, vcov = m1.vcovHC)
coeftest(m1, vcov = vcovHC(m1, type = "const"))
# 3. to print more nicely,  we are taking the square-root of the diagonals
# of this heteroskedastic consistent variance covariance matrix, which
# provides the standard errors for each of the coefficients.
rse1 <- sqrt(diag(m1.vcovHC))
rse2 <- sqrt(diag(m2.vcovHC))
rse3 <- sqrt(diag(m3.vcovHC))
## use stargazer to print formatted tables
stargazer(m1, m2, m3, type = "text",
omit = "school.id",
omit.stat = "f",
se = list(rse1, rse2, rse3),
header = FALSE)
## really spiff it up.
stargazer(m1, m2, m3, type = "latex",
omit = "school_id",
covariate.labels = c("Small Class", "Regular + Aide", "White/Asian",
"Female", "Free Lunch", "Intercept"),
add.lines = list(c("School FE", "No", "Yes", "Yes")),
se = list(100*rse1, 100*rse2, 100*rse3),
apply.coef = function(x) 100*x,
dep.var.labels = "Percentile",
notes = "All coef and se scaled by 100x",
column.sep.width = "2pt",
title = "OLS Regression. Small Class Causal Effect.",
header = FALSE
)
## really spiff it up.
stargazer(m1, m2, m3, type = "text",
omit = "school_id",
covariate.labels = c("Small Class", "Regular + Aide", "White/Asian",
"Female", "Free Lunch", "Intercept"),
add.lines = list(c("School FE", "No", "Yes", "Yes")),
se = list(100*rse1, 100*rse2, 100*rse3),
apply.coef = function(x) 100*x,
dep.var.labels = "Percentile",
notes = "All coef and se scaled by 100x",
column.sep.width = "2pt",
title = "OLS Regression. Small Class Causal Effect.",
header = FALSE
)
d[ , treat := ifelse(truth_f == 'fact' & sentiment_f == 'negative', 1, 0)]
d
df<-data.table::fread("../data/processed/tweets_data.csv")
df$truth_f <- as.factor(df$truth)
df$sentiment_f <- as.factor(df$sentiment)
# Robust standard error
rse <- function(model) {
sqrt(diag(vcovHC(model)))
}
d[ , treat := ifelse(truth_f == 'fact' & sentiment_f == 'negative', 1, 0)]
d
df[ , treat := ifelse(truth_f == 'fact' & sentiment_f == 'negative', 1, 0)]
df
df[ , treat := treat_assign(df)]
treat_assign <- function(x) {
case_when(truth_f == 'fact' & sentiment_f == 'negative' ~ 1,
truth_f == 'fake' & sentiment_f == 'negative' ~ 2,
truth_f == 'fact' & sentiment_f == 'positive' ~ 3,
truth_f == 'fake' & sentiment_f == 'positive' ~ 4)
}
df[ , treat := treat_assign(df)]
df
treat_assign <- function(x) {
case_when(x$truth_f == 'fact' & x$sentiment_f == 'negative' ~ 1,
x$truth_f == 'fake' & x$sentiment_f == 'negative' ~ 2,
x$truth_f == 'fact' & x$sentiment_f == 'positive' ~ 3,
x$truth_f == 'fake' & x$sentiment_f == 'positive' ~ 4)
}
df[ , treat := treat_assign(df)]
df
full_mod <- d[ , lm(treat ~ 1 + x2 + x2 + x3)]
library(data.table)
set.seed(1)
rows <- 101
d <- data.table(id = 1:rows)
d[ , ':='(treat = sample(c(0,1), .N, replace = TRUE),
x1 = rnorm(.N),
x2 = rbinom(.N, 2, .25),
x3 = sample(c("green", "blue", "red"), .N, replace = TRUE),
block = factor(sample(c("A", "B", "C"), .N , replace = TRUE)))
]
full_mod <- d[ , lm(treat ~ 1 + x2 + x2 + x3)]
summary(full_mod)
d
cov <- d[ , lm(treat ~ gender + age + education)]
cov <- df[ , lm(treat ~ gender + age + education)]
cov
summary(cov)
stargazer(cov, type='text')
treat_assign <- function(x) {
case_when(x$truth_f == 'fact' & x$sentiment_f == 'negative' ~ 1,
x$truth_f == 'fake' & x$sentiment_f == 'negative' ~ 2,
x$truth_f == 'fact' & x$sentiment_f == 'positive' ~ 3,
x$truth_f == 'fake' & x$sentiment_f == 'positive' ~ 4)
}
df[ , treat := treat_assign(df)]
cov <- df[ , lm(treat==1 ~ gender + age + education)]
stargazer(cov, type='text')
treat_assign <- function(x) {
case_when(x$truth_f == 'fact' & x$sentiment_f == 'negative' ~ 1,
x$truth_f == 'fake' & x$sentiment_f == 'negative' ~ 2,
x$truth_f == 'fact' & x$sentiment_f == 'positive' ~ 3,
x$truth_f == 'fake' & x$sentiment_f == 'positive' ~ 4)
}
df[ , treat := treat_assign(df)]
treat_1 <- df[ , lm(treat==1 ~ gender + age + education)]
treat_2 <- df[ , lm(treat==2 ~ gender + age + education)]
treat_3 <- df[ , lm(treat==3 ~ gender + age + education)]
treat_4 <- df[ , lm(treat==4 ~ gender + age + education)]
stargazer(treat_1,treat_2,treat_3,treat_4, type='text')
treat_assign <- function(x) {
case_when(x$truth_f == 'fact' & x$sentiment_f == 'negative' ~ 1,
x$truth_f == 'fake' & x$sentiment_f == 'negative' ~ 2,
x$truth_f == 'fact' & x$sentiment_f == 'positive' ~ 3,
x$truth_f == 'fake' & x$sentiment_f == 'positive' ~ 4)
}
df[ , treat := treat_assign(df)]
treat_1 <- df[ , lm(treat==1 ~ gender + age + education)]
treat_2 <- df[ , lm(treat==2 ~ gender + age + education)]
treat_3 <- df[ , lm(treat==3 ~ gender + age + education)]
treat_4 <- df[ , lm(treat==4 ~ gender + age + education)]
stargazer(treat_1,treat_2,treat_3,treat_4, type='text',
column.labels = c('FN', 'TN', 'TP', 'FP'))
stargazer(treat_1,treat_2,treat_3,treat_4, type='text',
column.labels = c('FN', 'TN', 'TP', 'FP'),
dep.var.caption = 'Randomization check across different treatment groups')
stargazer(treat_1,treat_2,treat_3,treat_4, type='text',
column.labels = c('FN', 'TN', 'TP', 'FP'),
dep.var.labels = 'Randomization check across different treatment groups')
dep.var.labels = c('Randomization check across different treatment groups')
stargazer(treat_1,treat_2,treat_3,treat_4, type='text',
column.labels = c('FN', 'TN', 'TP', 'FP'),
dep.var.labels = c('Randomization check across different treatment groups'))
stargazer(treat_1,treat_2,treat_3,treat_4, type='text',
column.labels = c('FN', 'TN', 'TP', 'FP'),
dep.var.labels = 'Randomization check across different treatment groups')
stargazer(treat_1,treat_2,treat_3,treat_4, type='text',
dep.var.labels = 'Randomization check across different treatment groups'
column.labels = c('FN', 'TN', 'TP', 'FP'),
stargazer(treat_1,treat_2,treat_3,treat_4, type='text',
dep.var.labels = 'Randomization check across different treatment groups',
column.labels = c('FN', 'TN', 'TP', 'FP'),
)
stargazer(treat_1,treat_2,treat_3,treat_4, type='text',
dep.var.labels = 'Randomization check across different treatment groups',
column.labels = c('FN', 'TN', 'TP', 'FP'))
treat_assign <- function(x) {
case_when(x$truth_f == 'fact' & x$sentiment_f == 'negative' ~ 1,
x$truth_f == 'fake' & x$sentiment_f == 'negative' ~ 2,
x$truth_f == 'fact' & x$sentiment_f == 'positive' ~ 3,
x$truth_f == 'fake' & x$sentiment_f == 'positive' ~ 4)
}
df[ , treat := treat_assign(df)]
treat_1 <- df[ , lm(treat==1 ~ gender + age + education)]
treat_2 <- df[ , lm(treat==2 ~ gender + age + education)]
treat_3 <- df[ , lm(treat==3 ~ gender + age + education)]
treat_4 <- df[ , lm(treat==4 ~ gender + age + education)]
stargazer(treat_1,treat_2,treat_3,treat_4, type='text',
dep.var.caption = 'Randomization check',
dep.var.labels = 'Four different treatment groups',
column.labels = c('FN', 'TN', 'TP', 'FP'))
stargazer(treat_1,treat_2,treat_3,treat_4, type='text',
dep.var.caption = 'Randomization check',
dep.var.labels = c('Four different treatment groups'),
column.labels = c('FN', 'TN', 'TP', 'FP'))
stargazer(treat_1,treat_2,treat_3,treat_4, type='text',
dep.var.caption = 'Randomization check',
dep.var.labels = c('Four different treatment groups', , , ),
column.labels = c('FN', 'TN', 'TP', 'FP'))
stargazer(treat_1,treat_2,treat_3,treat_4, type='text',
dep.var.caption = 'Randomization check',
dep.var.labels = c('Four different treatment groups', '' ,'' ,''),
column.labels = c('FN', 'TN', 'TP', 'FP'))
stargazer(treat_1,treat_2,treat_3,treat_4, type='text',
dep.var.caption = 'Randomization check',
dep.var.label = 'Four different treatment groups',
column.labels = c('FN', 'TN', 'TP', 'FP'))
stargazer(treat_1,treat_2,treat_3,treat_4, type='text',
dep.var.caption = 'Randomization check',
dep.var.labels = 'Four different treatment groups',
column.labels = c('FN', 'TN', 'TP', 'FP'))
dep.var.labels = c('Four', 'different', 'treatment', 'groups',
dep.var.labels = c('Four', 'different', 'treatment', 'groups',
stargazer(treat_1,treat_2,treat_3,treat_4, type='text',
dep.var.caption = 'Randomization check',
dep.var.labels = c('Four', 'different', 'treatment', 'groups'),
column.labels = c('FN', 'TN', 'TP', 'FP'))
stargazer(treat_1,treat_2,treat_3,treat_4, type='text',
stargazer(treat_1,treat_2,treat_3,treat_4, type='text',
dep.var.caption = 'Randomization check',
dep.var.labels = c('Four', 'different', 'treatment', 'groups'),
column.labels = c('FN', 'TN', 'TP', 'FP'))
stargazer(treat_1,treat_2,treat_3,treat_4, type='text',
dep.var.caption = 'Randomization check',
dep.var.labels = c('Four', 'different', 'treatment', 'groups'),
column.labels = c('FN', 'TN', 'TP', 'FP'),
covariate.labels = c('Male', 'Age 25 -34', 'Age 35 - 54', 'Age 55+', 'Educ Highschool', 'Educ College'))
df
treat_1
gdr0 <- ggplot(df, aes(x=education)) +
geom_bar( fill = I("grey"),
col = I("blue")) +
ggtitle("Overall - Education") +
xlab("Education") + ylab("Count")+
theme(axis.text.x = element_text(angle=90))
gdr1 <- ggplot(df_tp, aes(x=education)) +
geom_bar( fill = I("grey"),
col = I("blue"))+
ggtitle("True-Positive") +
xlab(NULL) + ylab("Count")+
theme(axis.text.x = element_text(angle=90))
df<-data.table::fread("../data/processed/tweets_data.csv")
df$truth_f <- as.factor(df$truth)
df$sentiment_f <- as.factor(df$sentiment)
df$age_f <- as.factor(df$age)
df$education_f <- as.factor(df$education)
df$gender_f <- as.factor(df$gender)
df[ truth == 'fact' & sentiment == 'positive', treatment_group := 'TP']
df[ truth == 'fact' & sentiment == 'negative', treatment_group := 'TN']
df[ truth == 'fake' & sentiment == 'positive', treatment_group := 'FP']
df[ truth == 'fake' & sentiment == 'negative', treatment_group := 'FN']
df$treatment_group_f <- as.factor(df$treatment_group)
df_tp <- df[ truth == 'fact' & sentiment == 'positive', ]
df_tn <- df[ truth == 'fact' & sentiment == 'negative', ]
df_fp <- df[ truth == 'false' & sentiment == 'positive', ]
df_fn <- df[ truth == 'false' & sentiment == 'negative', ]
df<-data.table::fread("../data/processed/tweets_data.csv")
df$truth_f <- as.factor(df$truth)
df$sentiment_f <- as.factor(df$sentiment)
df$age_f <- as.factor(df$age)
df$education_f <- as.factor(df$education)
df$gender_f <- as.factor(df$gender)
df[ truth == 'fact' & sentiment == 'positive', treatment_group := 'TP']
df[ truth == 'fact' & sentiment == 'negative', treatment_group := 'TN']
df[ truth == 'false' & sentiment == 'positive', treatment_group := 'FP']
df[ truth == 'false' & sentiment == 'negative', treatment_group := 'FN']
df$treatment_group_f <- as.factor(df$treatment_group)
df_tp <- df[ truth == 'fact' & sentiment == 'positive', ]
df_tn <- df[ truth == 'fact' & sentiment == 'negative', ]
df_fp <- df[ truth == 'false' & sentiment == 'positive', ]
df_fn <- df[ truth == 'false' & sentiment == 'negative', ]
tail(df)
df<-data.table::fread("../data/processed/tweets_data.csv")
df$truth_f <- as.factor(df$truth)
df$sentiment_f <- as.factor(df$sentiment)
df$age_f <- as.factor(df$age)
df$education_f <- as.factor(df$education)
df$gender_f <- as.factor(df$gender)
df[ truth == 'fact' & sentiment == 'positive', treatment_group := 'TP']
df[ truth == 'fact' & sentiment == 'negative', treatment_group := 'TN']
df[ truth == 'false' & sentiment == 'positive', treatment_group := 'FP']
df[ truth == 'false' & sentiment == 'negative', treatment_group := 'FN']
df$treatment_group_f <- as.factor(df$treatment_group)
df_tp <- df[ truth == 'fact' & sentiment == 'positive', ]
df_tn <- df[ truth == 'fact' & sentiment == 'negative', ]
df_fp <- df[ truth == 'false' & sentiment == 'positive', ]
df_fn <- df[ truth == 'false' & sentiment == 'negative', ]
tail(df)
df<-data.table::fread("../data/processed/tweets_data.csv")
df$truth_f <- as.factor(df$truth)
df$sentiment_f <- as.factor(df$sentiment)
df$age_f <- as.factor(df$age)
df$education_f <- as.factor(df$education)
df$gender_f <- as.factor(df$gender)
df[ truth == 'fact' & sentiment == 'positive', treatment_group := 'TP']
df[ truth == 'fact' & sentiment == 'negative', treatment_group := 'TN']
df[ truth == 'fake' & sentiment == 'positive', treatment_group := 'FP']
df[ truth == 'fake' & sentiment == 'negative', treatment_group := 'FN']
df$treatment_group_f <- as.factor(df$treatment_group)
df_tp <- df[ truth == 'fact' & sentiment == 'positive', ]
df_tn <- df[ truth == 'fact' & sentiment == 'negative', ]
df_fp <- df[ truth == 'fake' & sentiment == 'positive', ]
df_fn <- df[ truth == 'fake' & sentiment == 'negative', ]
tail(df)
df
g0 <- ggplot(df, aes(x=total_correct)) +
geom_bar( fill = I("grey"),
col = I("blue")) +
ggtitle("Overall - Total Correct") +
xlab("Correct Responses") + ylab("Count")
g1 <- ggplot(df_tp, aes(x=total_correct)) +
geom_bar( fill = I("grey"),
col = I("blue"))+
ggtitle("True-Positive") +
xlab(NULL) + ylab("Count")
g2 <- ggplot(df_tn, aes(x=total_correct)) +
geom_bar( fill = I("grey"),
col = I("blue")) +
ggtitle("True-Negative") +
xlab(NULL) + ylab(NULL)
g3 <- ggplot(df_fp, aes(x=total_correct)) +
geom_bar( fill = I("grey"),
col = I("blue")) +
ggtitle("False-Positive") +
xlab("Correct Responses") + ylab("Count")
g4 <- ggplot(df_fn, aes(x=total_correct)) +
geom_bar( fill = I("grey"),
col = I("blue")) +
ggtitle("False-Negative") +
xlab("Correct Responses") + ylab(NULL)
grid.arrange(g0, g1, g2, g3, g4, widths = c(2.5, 1.5, 1.5),
layout_matrix = rbind(c(1, 2, 3),
c(1, 4, 5)))
a0 <- ggplot(df, aes(x=age_f)) +
geom_bar( fill = I("grey"),
col = I("blue")) +
ggtitle("Overall - Age Bucket") +
xlab("Age Bucket") + ylab("Count") +
theme(axis.text.x = element_text(angle=90))
a1 <- ggplot(df_tp, aes(x=age_f)) +
geom_bar( fill = I("grey"),
col = I("blue"))+
ggtitle("True-Positive") +
xlab(NULL) + ylab("Count") +
theme(axis.text.x = element_text(angle=90))
a2 <- ggplot(df_tn, aes(x=age_f)) +
geom_bar( fill = I("grey"),
col = I("blue")) +
ggtitle("True-Negative") +
xlab(NULL) + ylab(NULL) +
theme(axis.text.x = element_text(angle=90))
a3 <- ggplot(df_fp, aes(x=age_f)) +
geom_bar( fill = I("grey"),
col = I("blue")) +
ggtitle("Fake-Positive") +
xlab("Age Bucket") + ylab("Count")+
theme(axis.text.x = element_text(angle=90))
a4 <- ggplot(df_fn, aes(x=age_f)) +
geom_bar( fill = I("grey"),
col = I("blue")) +
ggtitle("Fake-Negative") +
xlab("Age Bucket") + ylab(NULL)+
theme(axis.text.x = element_text(angle=90))
grid.arrange(a0, a1, a2, a3, a4, widths = c(2, 1, 1),
layout_matrix = rbind(c(1, 2, 3),
c(1, 4, 5)))
a0 <- ggplot(df, aes(x=age_f)) +
geom_bar( fill = I("grey"),
col = I("blue")) +
ggtitle("Overall - Age Bucket") +
xlab("Age Bucket") + ylab("Count") +
theme(axis.text.x = element_text(angle=90))
a1 <- ggplot(df_tp, aes(x=age_f)) +
geom_bar( fill = I("grey"),
col = I("blue"))+
ggtitle("True-Positive") +
xlab(NULL) + ylab("Count") +
theme(axis.text.x = element_text(angle=90))
a2 <- ggplot(df_tn, aes(x=age_f)) +
geom_bar( fill = I("grey"),
col = I("blue")) +
ggtitle("True-Negative") +
xlab(NULL) + ylab(NULL) +
theme(axis.text.x = element_text(angle=90))
a3 <- ggplot(df_fp, aes(x=age_f)) +
geom_bar( fill = I("grey"),
col = I("blue")) +
ggtitle("False-Positive") +
xlab("Age Bucket") + ylab("Count")+
theme(axis.text.x = element_text(angle=90))
a4 <- ggplot(df_fn, aes(x=age_f)) +
geom_bar( fill = I("grey"),
col = I("blue")) +
ggtitle("False-Negative") +
xlab("Age Bucket") + ylab(NULL)+
theme(axis.text.x = element_text(angle=90))
grid.arrange(a0, a1, a2, a3, a4, widths = c(2, 1, 1),
layout_matrix = rbind(c(1, 2, 3),
c(1, 4, 5)))
gdr0 <- ggplot(df, aes(x=gender_f)) +
geom_bar( fill = I("grey"),
col = I("blue")) +
ggtitle("Overall - Gender") +
xlab("Gender") + ylab("Count")
gdr1 <- ggplot(df_tp, aes(x=gender_f)) +
geom_bar( fill = I("grey"),
col = I("blue"))+
ggtitle("True-Positive") +
xlab(NULL) + ylab("Count")
gdr2 <- ggplot(df_tn, aes(x=gender_f)) +
geom_bar( fill = I("grey"),
col = I("blue")) +
ggtitle("True-Negative") +
xlab(NULL) + ylab(NULL)
gdr3 <- ggplot(df_fp, aes(x=gender_f)) +
geom_bar( fill = I("grey"),
col = I("blue")) +
ggtitle("False-Positive") +
xlab("Gender") + ylab("Count")
gdr4 <- ggplot(df_fn, aes(x=gender_f)) +
geom_bar( fill = I("grey"),
col = I("blue")) +
ggtitle("False-Negative") +
xlab("Gender") + ylab(NULL)
grid.arrange(gdr0, gdr1, gdr2, gdr3, gdr4, widths = c(2, 1, 1),
layout_matrix = rbind(c(1, 2, 3),
c(1, 4, 5)))
gdr0 <- ggplot(df, aes(x=education)) +
geom_bar( fill = I("grey"),
col = I("blue")) +
ggtitle("Overall - Education") +
xlab("Education") + ylab("Count")+
theme(axis.text.x = element_text(angle=90))
gdr1 <- ggplot(df_tp, aes(x=education)) +
geom_bar( fill = I("grey"),
col = I("blue"))+
ggtitle("True-Positive") +
xlab(NULL) + ylab("Count")+
theme(axis.text.x = element_text(angle=90))
gdr2 <- ggplot(df_tn, aes(x=education)) +
geom_bar( fill = I("grey"),
col = I("blue")) +
ggtitle("True-Negative") +
xlab(NULL) + ylab(NULL)+
theme(axis.text.x = element_text(angle=90))
gdr3 <- ggplot(df_fp, aes(x=education)) +
geom_bar( fill = I("grey"),
col = I("blue")) +
ggtitle("False-Positive") +
xlab("Education") + ylab("Count")+
theme(axis.text.x = element_text(angle=90))
gdr4 <- ggplot(df_fn, aes(x=education)) +
geom_bar( fill = I("grey"),
col = I("blue")) +
ggtitle("False-Negative") +
xlab("Education") + ylab(NULL)+
theme(axis.text.x = element_text(angle=90))
grid.arrange(gdr0, gdr1, gdr2, gdr3, gdr4, widths = c(2, 1, 1),
layout_matrix = rbind(c(1, 2, 3),
c(1, 4, 5)))
